<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
chan producer_finish;
chan buffer_finish,get,put;
chan empty_buffer;</declaration><template><name x="5" y="5">Producer</name><declaration>// Place local declarations here.
clock x;</declaration><location id="id0" x="-160" y="48"><name x="-176" y="56">done</name></location><location id="id1" x="120" y="-88"><name x="110" y="-118">reset</name></location><location id="id2" x="-24" y="-88"><name x="-34" y="-118">waitput</name></location><location id="id3" x="-160" y="-88"><name x="-170" y="-118">start</name><label kind="invariant" x="-208" y="-96">x&lt;=3</label></location><init ref="id3"/><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-88" y="-16">producer_finish?</label></transition><transition><source ref="id3"/><target ref="id0"/><label kind="synchronisation" x="-264" y="-24">producer_finish?</label></transition><transition><source ref="id1"/><target ref="id3"/><label kind="assignment" x="-40" y="-224">x:=0</label><nail x="120" y="-192"/><nail x="-160" y="-192"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="40" y="-112">put!</label></transition><transition><source ref="id3"/><target ref="id2"/></transition></template><template><name>Buffer</name><declaration>int item;</declaration><location id="id4" x="-1752" y="-648"><name x="-1744" y="-640">done</name></location><location id="id5" x="-1624" y="-752"><name x="-1608" y="-768">Put</name></location><location id="id6" x="-1856" y="-752"><name x="-1896" y="-768">Get</name></location><location id="id7" x="-1752" y="-752"><name x="-1762" y="-782">start</name></location><init ref="id7"/><transition><source ref="id6"/><target ref="id7"/><label kind="assignment" x="-1840" y="-832">item--</label><nail x="-1856" y="-824"/></transition><transition><source ref="id5"/><target ref="id7"/><label kind="assignment" x="-1624" y="-840">item++</label><nail x="-1624" y="-768"/><nail x="-1624" y="-824"/></transition><transition><source ref="id7"/><target ref="id4"/><label kind="synchronisation" x="-1840" y="-704">buffer_finish?</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="guard" x="-1816" y="-752">item&gt;0</label><label kind="synchronisation" x="-1832" y="-776">get?</label></transition><transition><source ref="id7"/><target ref="id5"/><label kind="guard" x="-1712" y="-752">item&lt;3</label><label kind="synchronisation" x="-1680" y="-776">put?</label></transition></template><template><name>Consumer</name><declaration>int sum;
clock x;</declaration><location id="id8" x="-232" y="-400"><name x="-280" y="-408">done</name></location><location id="id9" x="-496" y="-512"><name x="-506" y="-542">reset</name></location><location id="id10" x="-232" y="-488"></location><location id="id11" x="-448" y="-400"><name x="-424" y="-408">waitget</name></location><location id="id12" x="-368" y="-488"><name x="-378" y="-518">start</name><label kind="invariant" x="-378" y="-473">x&lt;=3</label></location><init ref="id12"/><transition><source ref="id10"/><target ref="id8"/><label kind="synchronisation" x="-320" y="-456">buffer_finish!</label></transition><transition><source ref="id9"/><target ref="id12"/><label kind="assignment" x="-448" y="-520">x:=0</label></transition><transition><source ref="id11"/><target ref="id9"/><label kind="synchronisation" x="-504" y="-472">get!</label><label kind="assignment" x="-528" y="-456">sum+=20</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="guard" x="-448" y="-480">sum&lt;100</label></transition><transition><source ref="id12"/><target ref="id10"/><label kind="guard" x="-336" y="-512">sum&gt;=100</label><label kind="synchronisation" x="-336" y="-536">producer_finish!</label></transition></template><system>// Place template instantiations here.


// List one or more processes to be composed into a system.
system Producer,Buffer,Consumer;</system></nta>